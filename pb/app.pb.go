// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.4
// source: app.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WSType int32

const (
	WSType_TYPE_FUTURE_TICK     WSType = 0
	WSType_TYPE_FUTURE_ORDER    WSType = 1
	WSType_TYPE_TRADE_INDEX     WSType = 2
	WSType_TYPE_FUTURE_POSITION WSType = 3
	WSType_TYPE_ASSIST_STATUS   WSType = 4
	WSType_TYPE_ERR_MESSAGE     WSType = 5
	WSType_TYPE_KBAR_ARR        WSType = 6
	WSType_TYPE_FUTURE_DETAIL   WSType = 7
)

// Enum value maps for WSType.
var (
	WSType_name = map[int32]string{
		0: "TYPE_FUTURE_TICK",
		1: "TYPE_FUTURE_ORDER",
		2: "TYPE_TRADE_INDEX",
		3: "TYPE_FUTURE_POSITION",
		4: "TYPE_ASSIST_STATUS",
		5: "TYPE_ERR_MESSAGE",
		6: "TYPE_KBAR_ARR",
		7: "TYPE_FUTURE_DETAIL",
	}
	WSType_value = map[string]int32{
		"TYPE_FUTURE_TICK":     0,
		"TYPE_FUTURE_ORDER":    1,
		"TYPE_TRADE_INDEX":     2,
		"TYPE_FUTURE_POSITION": 3,
		"TYPE_ASSIST_STATUS":   4,
		"TYPE_ERR_MESSAGE":     5,
		"TYPE_KBAR_ARR":        6,
		"TYPE_FUTURE_DETAIL":   7,
	}
)

func (x WSType) Enum() *WSType {
	p := new(WSType)
	*p = x
	return p
}

func (x WSType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WSType) Descriptor() protoreflect.EnumDescriptor {
	return file_app_proto_enumTypes[0].Descriptor()
}

func (WSType) Type() protoreflect.EnumType {
	return &file_app_proto_enumTypes[0]
}

func (x WSType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WSType.Descriptor instead.
func (WSType) EnumDescriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{0}
}

type WSMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type WSType `protobuf:"varint,1,opt,name=type,proto3,enum=sinopac_forwarder.WSType" json:"type,omitempty"`
	// Types that are assignable to Data:
	//
	//	*WSMessage_FutureTick
	//	*WSMessage_FutureOrder
	//	*WSMessage_TradeIndex
	//	*WSMessage_FuturePosition
	//	*WSMessage_AssitStatus
	//	*WSMessage_ErrMessage
	//	*WSMessage_HistoryKbar
	//	*WSMessage_FutureDetail
	Data isWSMessage_Data `protobuf_oneof:"data"`
}

func (x *WSMessage) Reset() {
	*x = WSMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSMessage) ProtoMessage() {}

func (x *WSMessage) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSMessage.ProtoReflect.Descriptor instead.
func (*WSMessage) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{0}
}

func (x *WSMessage) GetType() WSType {
	if x != nil {
		return x.Type
	}
	return WSType_TYPE_FUTURE_TICK
}

func (m *WSMessage) GetData() isWSMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *WSMessage) GetFutureTick() *WSFutureTick {
	if x, ok := x.GetData().(*WSMessage_FutureTick); ok {
		return x.FutureTick
	}
	return nil
}

func (x *WSMessage) GetFutureOrder() *WSFutureOrder {
	if x, ok := x.GetData().(*WSMessage_FutureOrder); ok {
		return x.FutureOrder
	}
	return nil
}

func (x *WSMessage) GetTradeIndex() *WSTradeIndex {
	if x, ok := x.GetData().(*WSMessage_TradeIndex); ok {
		return x.TradeIndex
	}
	return nil
}

func (x *WSMessage) GetFuturePosition() *WSFuturePosition {
	if x, ok := x.GetData().(*WSMessage_FuturePosition); ok {
		return x.FuturePosition
	}
	return nil
}

func (x *WSMessage) GetAssitStatus() *WSAssitStatus {
	if x, ok := x.GetData().(*WSMessage_AssitStatus); ok {
		return x.AssitStatus
	}
	return nil
}

func (x *WSMessage) GetErrMessage() *WSErrMessage {
	if x, ok := x.GetData().(*WSMessage_ErrMessage); ok {
		return x.ErrMessage
	}
	return nil
}

func (x *WSMessage) GetHistoryKbar() *WSHistoryKbarMessage {
	if x, ok := x.GetData().(*WSMessage_HistoryKbar); ok {
		return x.HistoryKbar
	}
	return nil
}

func (x *WSMessage) GetFutureDetail() *WSFutureDetail {
	if x, ok := x.GetData().(*WSMessage_FutureDetail); ok {
		return x.FutureDetail
	}
	return nil
}

type isWSMessage_Data interface {
	isWSMessage_Data()
}

type WSMessage_FutureTick struct {
	FutureTick *WSFutureTick `protobuf:"bytes,2,opt,name=future_tick,json=futureTick,proto3,oneof"`
}

type WSMessage_FutureOrder struct {
	FutureOrder *WSFutureOrder `protobuf:"bytes,3,opt,name=future_order,json=futureOrder,proto3,oneof"`
}

type WSMessage_TradeIndex struct {
	TradeIndex *WSTradeIndex `protobuf:"bytes,5,opt,name=trade_index,json=tradeIndex,proto3,oneof"`
}

type WSMessage_FuturePosition struct {
	FuturePosition *WSFuturePosition `protobuf:"bytes,6,opt,name=future_position,json=futurePosition,proto3,oneof"`
}

type WSMessage_AssitStatus struct {
	AssitStatus *WSAssitStatus `protobuf:"bytes,7,opt,name=assit_status,json=assitStatus,proto3,oneof"`
}

type WSMessage_ErrMessage struct {
	ErrMessage *WSErrMessage `protobuf:"bytes,8,opt,name=err_message,json=errMessage,proto3,oneof"`
}

type WSMessage_HistoryKbar struct {
	HistoryKbar *WSHistoryKbarMessage `protobuf:"bytes,9,opt,name=history_kbar,json=historyKbar,proto3,oneof"`
}

type WSMessage_FutureDetail struct {
	FutureDetail *WSFutureDetail `protobuf:"bytes,10,opt,name=future_detail,json=futureDetail,proto3,oneof"`
}

func (*WSMessage_FutureTick) isWSMessage_Data() {}

func (*WSMessage_FutureOrder) isWSMessage_Data() {}

func (*WSMessage_TradeIndex) isWSMessage_Data() {}

func (*WSMessage_FuturePosition) isWSMessage_Data() {}

func (*WSMessage_AssitStatus) isWSMessage_Data() {}

func (*WSMessage_ErrMessage) isWSMessage_Data() {}

func (*WSMessage_HistoryKbar) isWSMessage_Data() {}

func (*WSMessage_FutureDetail) isWSMessage_Data() {}

type WSFutureDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Symbol         string  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name           string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Category       string  `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	DeliveryMonth  string  `protobuf:"bytes,5,opt,name=delivery_month,json=deliveryMonth,proto3" json:"delivery_month,omitempty"`
	DeliveryDate   string  `protobuf:"bytes,6,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	UnderlyingKind string  `protobuf:"bytes,7,opt,name=underlying_kind,json=underlyingKind,proto3" json:"underlying_kind,omitempty"`
	Unit           int64   `protobuf:"varint,8,opt,name=unit,proto3" json:"unit,omitempty"`
	LimitUp        float64 `protobuf:"fixed64,9,opt,name=limit_up,json=limitUp,proto3" json:"limit_up,omitempty"`
	LimitDown      float64 `protobuf:"fixed64,10,opt,name=limit_down,json=limitDown,proto3" json:"limit_down,omitempty"`
	Reference      float64 `protobuf:"fixed64,11,opt,name=reference,proto3" json:"reference,omitempty"`
	UpdateDate     string  `protobuf:"bytes,12,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`
}

func (x *WSFutureDetail) Reset() {
	*x = WSFutureDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSFutureDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSFutureDetail) ProtoMessage() {}

func (x *WSFutureDetail) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSFutureDetail.ProtoReflect.Descriptor instead.
func (*WSFutureDetail) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{1}
}

func (x *WSFutureDetail) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WSFutureDetail) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *WSFutureDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WSFutureDetail) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *WSFutureDetail) GetDeliveryMonth() string {
	if x != nil {
		return x.DeliveryMonth
	}
	return ""
}

func (x *WSFutureDetail) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *WSFutureDetail) GetUnderlyingKind() string {
	if x != nil {
		return x.UnderlyingKind
	}
	return ""
}

func (x *WSFutureDetail) GetUnit() int64 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *WSFutureDetail) GetLimitUp() float64 {
	if x != nil {
		return x.LimitUp
	}
	return 0
}

func (x *WSFutureDetail) GetLimitDown() float64 {
	if x != nil {
		return x.LimitDown
	}
	return 0
}

func (x *WSFutureDetail) GetReference() float64 {
	if x != nil {
		return x.Reference
	}
	return 0
}

func (x *WSFutureDetail) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

type WSErrMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode  int64  `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	Response string `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *WSErrMessage) Reset() {
	*x = WSErrMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSErrMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSErrMessage) ProtoMessage() {}

func (x *WSErrMessage) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSErrMessage.ProtoReflect.Descriptor instead.
func (*WSErrMessage) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{2}
}

func (x *WSErrMessage) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *WSErrMessage) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type WSFutureOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	BaseOrder *WSOrder `protobuf:"bytes,2,opt,name=base_order,json=baseOrder,proto3" json:"base_order,omitempty"`
}

func (x *WSFutureOrder) Reset() {
	*x = WSFutureOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSFutureOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSFutureOrder) ProtoMessage() {}

func (x *WSFutureOrder) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSFutureOrder.ProtoReflect.Descriptor instead.
func (*WSFutureOrder) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{3}
}

func (x *WSFutureOrder) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WSFutureOrder) GetBaseOrder() *WSOrder {
	if x != nil {
		return x.BaseOrder
	}
	return nil
}

type WSOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId   string  `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Status    int64   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	OrderTime string  `protobuf:"bytes,3,opt,name=order_time,json=orderTime,proto3" json:"order_time,omitempty"`
	Action    int64   `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty"`
	Price     float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Quantity  int64   `protobuf:"varint,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *WSOrder) Reset() {
	*x = WSOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSOrder) ProtoMessage() {}

func (x *WSOrder) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSOrder.ProtoReflect.Descriptor instead.
func (*WSOrder) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{4}
}

func (x *WSOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *WSOrder) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WSOrder) GetOrderTime() string {
	if x != nil {
		return x.OrderTime
	}
	return ""
}

func (x *WSOrder) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *WSOrder) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *WSOrder) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type WSFutureTick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	TickTime        string  `protobuf:"bytes,2,opt,name=tick_time,json=tickTime,proto3" json:"tick_time,omitempty"`
	Open            float64 `protobuf:"fixed64,3,opt,name=open,proto3" json:"open,omitempty"`
	UnderlyingPrice float64 `protobuf:"fixed64,4,opt,name=underlying_price,json=underlyingPrice,proto3" json:"underlying_price,omitempty"`
	BidSideTotalVol int64   `protobuf:"varint,5,opt,name=bid_side_total_vol,json=bidSideTotalVol,proto3" json:"bid_side_total_vol,omitempty"`
	AskSideTotalVol int64   `protobuf:"varint,6,opt,name=ask_side_total_vol,json=askSideTotalVol,proto3" json:"ask_side_total_vol,omitempty"`
	AvgPrice        float64 `protobuf:"fixed64,7,opt,name=avg_price,json=avgPrice,proto3" json:"avg_price,omitempty"`
	Close           float64 `protobuf:"fixed64,8,opt,name=close,proto3" json:"close,omitempty"`
	High            float64 `protobuf:"fixed64,9,opt,name=high,proto3" json:"high,omitempty"`
	Low             float64 `protobuf:"fixed64,10,opt,name=low,proto3" json:"low,omitempty"`
	Amount          float64 `protobuf:"fixed64,11,opt,name=amount,proto3" json:"amount,omitempty"`
	TotalAmount     float64 `protobuf:"fixed64,12,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	Volume          int64   `protobuf:"varint,13,opt,name=volume,proto3" json:"volume,omitempty"`
	TotalVolume     int64   `protobuf:"varint,14,opt,name=total_volume,json=totalVolume,proto3" json:"total_volume,omitempty"`
	TickType        int64   `protobuf:"varint,15,opt,name=tick_type,json=tickType,proto3" json:"tick_type,omitempty"`
	ChgType         int64   `protobuf:"varint,16,opt,name=chg_type,json=chgType,proto3" json:"chg_type,omitempty"`
	PriceChg        float64 `protobuf:"fixed64,17,opt,name=price_chg,json=priceChg,proto3" json:"price_chg,omitempty"`
	PctChg          float64 `protobuf:"fixed64,18,opt,name=pct_chg,json=pctChg,proto3" json:"pct_chg,omitempty"`
}

func (x *WSFutureTick) Reset() {
	*x = WSFutureTick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSFutureTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSFutureTick) ProtoMessage() {}

func (x *WSFutureTick) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSFutureTick.ProtoReflect.Descriptor instead.
func (*WSFutureTick) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{5}
}

func (x *WSFutureTick) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WSFutureTick) GetTickTime() string {
	if x != nil {
		return x.TickTime
	}
	return ""
}

func (x *WSFutureTick) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *WSFutureTick) GetUnderlyingPrice() float64 {
	if x != nil {
		return x.UnderlyingPrice
	}
	return 0
}

func (x *WSFutureTick) GetBidSideTotalVol() int64 {
	if x != nil {
		return x.BidSideTotalVol
	}
	return 0
}

func (x *WSFutureTick) GetAskSideTotalVol() int64 {
	if x != nil {
		return x.AskSideTotalVol
	}
	return 0
}

func (x *WSFutureTick) GetAvgPrice() float64 {
	if x != nil {
		return x.AvgPrice
	}
	return 0
}

func (x *WSFutureTick) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *WSFutureTick) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *WSFutureTick) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *WSFutureTick) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WSFutureTick) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *WSFutureTick) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *WSFutureTick) GetTotalVolume() int64 {
	if x != nil {
		return x.TotalVolume
	}
	return 0
}

func (x *WSFutureTick) GetTickType() int64 {
	if x != nil {
		return x.TickType
	}
	return 0
}

func (x *WSFutureTick) GetChgType() int64 {
	if x != nil {
		return x.ChgType
	}
	return 0
}

func (x *WSFutureTick) GetPriceChg() float64 {
	if x != nil {
		return x.PriceChg
	}
	return 0
}

func (x *WSFutureTick) GetPctChg() float64 {
	if x != nil {
		return x.PctChg
	}
	return 0
}

type WSTradeIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tse    *WSIndexStatus `protobuf:"bytes,1,opt,name=tse,proto3" json:"tse,omitempty"`
	Otc    *WSIndexStatus `protobuf:"bytes,2,opt,name=otc,proto3" json:"otc,omitempty"`
	Nasdaq *WSIndexStatus `protobuf:"bytes,3,opt,name=nasdaq,proto3" json:"nasdaq,omitempty"`
	Nf     *WSIndexStatus `protobuf:"bytes,4,opt,name=nf,proto3" json:"nf,omitempty"`
}

func (x *WSTradeIndex) Reset() {
	*x = WSTradeIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSTradeIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSTradeIndex) ProtoMessage() {}

func (x *WSTradeIndex) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSTradeIndex.ProtoReflect.Descriptor instead.
func (*WSTradeIndex) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{6}
}

func (x *WSTradeIndex) GetTse() *WSIndexStatus {
	if x != nil {
		return x.Tse
	}
	return nil
}

func (x *WSTradeIndex) GetOtc() *WSIndexStatus {
	if x != nil {
		return x.Otc
	}
	return nil
}

func (x *WSTradeIndex) GetNasdaq() *WSIndexStatus {
	if x != nil {
		return x.Nasdaq
	}
	return nil
}

func (x *WSTradeIndex) GetNf() *WSIndexStatus {
	if x != nil {
		return x.Nf
	}
	return nil
}

type WSIndexStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BreakCount int64   `protobuf:"varint,1,opt,name=break_count,json=breakCount,proto3" json:"break_count,omitempty"`
	PriceChg   float64 `protobuf:"fixed64,2,opt,name=price_chg,json=priceChg,proto3" json:"price_chg,omitempty"`
}

func (x *WSIndexStatus) Reset() {
	*x = WSIndexStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSIndexStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSIndexStatus) ProtoMessage() {}

func (x *WSIndexStatus) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSIndexStatus.ProtoReflect.Descriptor instead.
func (*WSIndexStatus) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{7}
}

func (x *WSIndexStatus) GetBreakCount() int64 {
	if x != nil {
		return x.BreakCount
	}
	return 0
}

func (x *WSIndexStatus) GetPriceChg() float64 {
	if x != nil {
		return x.PriceChg
	}
	return 0
}

type WSFuturePosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position []*Position `protobuf:"bytes,1,rep,name=position,proto3" json:"position,omitempty"`
}

func (x *WSFuturePosition) Reset() {
	*x = WSFuturePosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSFuturePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSFuturePosition) ProtoMessage() {}

func (x *WSFuturePosition) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSFuturePosition.ProtoReflect.Descriptor instead.
func (*WSFuturePosition) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{8}
}

func (x *WSFuturePosition) GetPosition() []*Position {
	if x != nil {
		return x.Position
	}
	return nil
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Direction string  `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	Quantity  int64   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price     float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	LastPrice float64 `protobuf:"fixed64,5,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	Pnl       float64 `protobuf:"fixed64,6,opt,name=pnl,proto3" json:"pnl,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{9}
}

func (x *Position) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Position) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *Position) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Position) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Position) GetLastPrice() float64 {
	if x != nil {
		return x.LastPrice
	}
	return 0
}

func (x *Position) GetPnl() float64 {
	if x != nil {
		return x.Pnl
	}
	return 0
}

type WSAssitStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Running bool `protobuf:"varint,1,opt,name=running,proto3" json:"running,omitempty"`
}

func (x *WSAssitStatus) Reset() {
	*x = WSAssitStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSAssitStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSAssitStatus) ProtoMessage() {}

func (x *WSAssitStatus) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSAssitStatus.ProtoReflect.Descriptor instead.
func (*WSAssitStatus) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{10}
}

func (x *WSAssitStatus) GetRunning() bool {
	if x != nil {
		return x.Running
	}
	return false
}

type WSHistoryKbarMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arr []*Kbar `protobuf:"bytes,1,rep,name=arr,proto3" json:"arr,omitempty"`
}

func (x *WSHistoryKbarMessage) Reset() {
	*x = WSHistoryKbarMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSHistoryKbarMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSHistoryKbarMessage) ProtoMessage() {}

func (x *WSHistoryKbarMessage) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSHistoryKbarMessage.ProtoReflect.Descriptor instead.
func (*WSHistoryKbarMessage) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{11}
}

func (x *WSHistoryKbarMessage) GetArr() []*Kbar {
	if x != nil {
		return x.Arr
	}
	return nil
}

type Kbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KbarTime string  `protobuf:"bytes,1,opt,name=kbar_time,json=kbarTime,proto3" json:"kbar_time,omitempty"`
	Open     float64 `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	High     float64 `protobuf:"fixed64,3,opt,name=high,proto3" json:"high,omitempty"`
	Close    float64 `protobuf:"fixed64,4,opt,name=close,proto3" json:"close,omitempty"`
	Low      float64 `protobuf:"fixed64,5,opt,name=low,proto3" json:"low,omitempty"`
	Volume   int64   `protobuf:"varint,6,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *Kbar) Reset() {
	*x = Kbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kbar) ProtoMessage() {}

func (x *Kbar) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kbar.ProtoReflect.Descriptor instead.
func (*Kbar) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{12}
}

func (x *Kbar) GetKbarTime() string {
	if x != nil {
		return x.KbarTime
	}
	return ""
}

func (x *Kbar) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Kbar) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Kbar) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Kbar) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Kbar) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

var File_app_proto protoreflect.FileDescriptor

var file_app_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x69, 0x6e,
	0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x22, 0x84,
	0x05, 0x0a, 0x09, 0x57, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x69, 0x6e,
	0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57,
	0x53, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x66,
	0x75, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x73, 0x69, 0x6e, 0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x53, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x12,
	0x45, 0x0a, 0x0c, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x69, 0x6e, 0x6f, 0x70, 0x61, 0x63, 0x5f,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x53, 0x46, 0x75, 0x74, 0x75,
	0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x75, 0x74, 0x75, 0x72,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x69,
	0x6e, 0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x57, 0x53, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00, 0x52, 0x0a,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4e, 0x0a, 0x0f, 0x66, 0x75,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x69, 0x6e, 0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x53, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x66, 0x75, 0x74, 0x75,
	0x72, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x73, 0x69, 0x6e, 0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x53, 0x41, 0x73, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x42, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x69, 0x6e, 0x6f, 0x70, 0x61, 0x63,
	0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x53, 0x45, 0x72, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x6b, 0x62, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x69,
	0x6e, 0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x57, 0x53, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4b, 0x62, 0x61, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4b,
	0x62, 0x61, 0x72, 0x12, 0x48, 0x0a, 0x0d, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x69, 0x6e,
	0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57,
	0x53, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52,
	0x0c, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xee, 0x02, 0x0a, 0x0e, 0x57, 0x53, 0x46, 0x75, 0x74, 0x75,
	0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x6c, 0x79, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x75, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x45, 0x0a, 0x0c, 0x57, 0x53, 0x45, 0x72, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a,
	0x0d, 0x57, 0x53, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x69, 0x6e, 0x6f, 0x70, 0x61, 0x63,
	0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x53, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xa5, 0x01,
	0x0a, 0x07, 0x57, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x95, 0x04, 0x0a, 0x0c, 0x57, 0x53, 0x46, 0x75, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x62, 0x69, 0x64, 0x5f, 0x73, 0x69,
	0x64, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x62, 0x69, 0x64, 0x53, 0x69, 0x64, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x56, 0x6f, 0x6c, 0x12, 0x2b, 0x0a, 0x12, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x61, 0x73, 0x6b, 0x53, 0x69, 0x64, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x68, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x68, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x68, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x43, 0x68, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x63, 0x74, 0x5f, 0x63, 0x68, 0x67, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x70, 0x63, 0x74, 0x43, 0x68, 0x67, 0x22, 0xe2, 0x01,
	0x0a, 0x0c, 0x57, 0x53, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32,
	0x0a, 0x03, 0x74, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x69,
	0x6e, 0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x57, 0x53, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x03, 0x74,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x03, 0x6f, 0x74, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x69, 0x6e, 0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x57, 0x53, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x03, 0x6f, 0x74, 0x63, 0x12, 0x38, 0x0a, 0x06, 0x6e, 0x61, 0x73, 0x64, 0x61, 0x71,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x69, 0x6e, 0x6f, 0x70, 0x61, 0x63,
	0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x53, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x73, 0x64, 0x61, 0x71,
	0x12, 0x30, 0x0a, 0x02, 0x6e, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73,
	0x69, 0x6e, 0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x57, 0x53, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x02,
	0x6e, 0x66, 0x22, 0x4d, 0x0a, 0x0d, 0x57, 0x53, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x67, 0x22, 0x4b, 0x0a, 0x10, 0x57, 0x53, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x69, 0x6e, 0x6f, 0x70, 0x61,
	0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f,
	0x01, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x6e, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x6e, 0x6c,
	0x22, 0x29, 0x0a, 0x0d, 0x57, 0x53, 0x41, 0x73, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x41, 0x0a, 0x14, 0x57,
	0x53, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4b, 0x62, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x03, 0x61, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x69, 0x6e, 0x6f, 0x70, 0x61, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4b, 0x62, 0x61, 0x72, 0x52, 0x03, 0x61, 0x72, 0x72, 0x22, 0x8b,
	0x01, 0x0a, 0x04, 0x4b, 0x62, 0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x62, 0x61, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x62, 0x61, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2a, 0xbe, 0x01, 0x0a,
	0x06, 0x57, 0x53, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x41,
	0x44, 0x45, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x53, 0x53,
	0x49, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4b, 0x42, 0x41, 0x52, 0x5f,
	0x41, 0x52, 0x52, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x55,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x10, 0x07, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_proto_rawDescOnce sync.Once
	file_app_proto_rawDescData = file_app_proto_rawDesc
)

func file_app_proto_rawDescGZIP() []byte {
	file_app_proto_rawDescOnce.Do(func() {
		file_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_proto_rawDescData)
	})
	return file_app_proto_rawDescData
}

var file_app_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_app_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_app_proto_goTypes = []interface{}{
	(WSType)(0),                  // 0: sinopac_forwarder.WSType
	(*WSMessage)(nil),            // 1: sinopac_forwarder.WSMessage
	(*WSFutureDetail)(nil),       // 2: sinopac_forwarder.WSFutureDetail
	(*WSErrMessage)(nil),         // 3: sinopac_forwarder.WSErrMessage
	(*WSFutureOrder)(nil),        // 4: sinopac_forwarder.WSFutureOrder
	(*WSOrder)(nil),              // 5: sinopac_forwarder.WSOrder
	(*WSFutureTick)(nil),         // 6: sinopac_forwarder.WSFutureTick
	(*WSTradeIndex)(nil),         // 7: sinopac_forwarder.WSTradeIndex
	(*WSIndexStatus)(nil),        // 8: sinopac_forwarder.WSIndexStatus
	(*WSFuturePosition)(nil),     // 9: sinopac_forwarder.WSFuturePosition
	(*Position)(nil),             // 10: sinopac_forwarder.Position
	(*WSAssitStatus)(nil),        // 11: sinopac_forwarder.WSAssitStatus
	(*WSHistoryKbarMessage)(nil), // 12: sinopac_forwarder.WSHistoryKbarMessage
	(*Kbar)(nil),                 // 13: sinopac_forwarder.Kbar
}
var file_app_proto_depIdxs = []int32{
	0,  // 0: sinopac_forwarder.WSMessage.type:type_name -> sinopac_forwarder.WSType
	6,  // 1: sinopac_forwarder.WSMessage.future_tick:type_name -> sinopac_forwarder.WSFutureTick
	4,  // 2: sinopac_forwarder.WSMessage.future_order:type_name -> sinopac_forwarder.WSFutureOrder
	7,  // 3: sinopac_forwarder.WSMessage.trade_index:type_name -> sinopac_forwarder.WSTradeIndex
	9,  // 4: sinopac_forwarder.WSMessage.future_position:type_name -> sinopac_forwarder.WSFuturePosition
	11, // 5: sinopac_forwarder.WSMessage.assit_status:type_name -> sinopac_forwarder.WSAssitStatus
	3,  // 6: sinopac_forwarder.WSMessage.err_message:type_name -> sinopac_forwarder.WSErrMessage
	12, // 7: sinopac_forwarder.WSMessage.history_kbar:type_name -> sinopac_forwarder.WSHistoryKbarMessage
	2,  // 8: sinopac_forwarder.WSMessage.future_detail:type_name -> sinopac_forwarder.WSFutureDetail
	5,  // 9: sinopac_forwarder.WSFutureOrder.base_order:type_name -> sinopac_forwarder.WSOrder
	8,  // 10: sinopac_forwarder.WSTradeIndex.tse:type_name -> sinopac_forwarder.WSIndexStatus
	8,  // 11: sinopac_forwarder.WSTradeIndex.otc:type_name -> sinopac_forwarder.WSIndexStatus
	8,  // 12: sinopac_forwarder.WSTradeIndex.nasdaq:type_name -> sinopac_forwarder.WSIndexStatus
	8,  // 13: sinopac_forwarder.WSTradeIndex.nf:type_name -> sinopac_forwarder.WSIndexStatus
	10, // 14: sinopac_forwarder.WSFuturePosition.position:type_name -> sinopac_forwarder.Position
	13, // 15: sinopac_forwarder.WSHistoryKbarMessage.arr:type_name -> sinopac_forwarder.Kbar
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_app_proto_init() }
func file_app_proto_init() {
	if File_app_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSFutureDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSErrMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSFutureOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSFutureTick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSTradeIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSIndexStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSFuturePosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSAssitStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSHistoryKbarMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_app_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*WSMessage_FutureTick)(nil),
		(*WSMessage_FutureOrder)(nil),
		(*WSMessage_TradeIndex)(nil),
		(*WSMessage_FuturePosition)(nil),
		(*WSMessage_AssitStatus)(nil),
		(*WSMessage_ErrMessage)(nil),
		(*WSMessage_HistoryKbar)(nil),
		(*WSMessage_FutureDetail)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_proto_goTypes,
		DependencyIndexes: file_app_proto_depIdxs,
		EnumInfos:         file_app_proto_enumTypes,
		MessageInfos:      file_app_proto_msgTypes,
	}.Build()
	File_app_proto = out.File
	file_app_proto_rawDesc = nil
	file_app_proto_goTypes = nil
	file_app_proto_depIdxs = nil
}
