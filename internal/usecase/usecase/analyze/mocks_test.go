// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package analyze_test is a generated GoMock package.
package analyze_test

import (
	context "context"
	reflect "reflect"
	time "time"
	entity "tmt/internal/entity"
	cache "tmt/internal/usecase/cache"
	analyze "tmt/internal/usecase/usecase/analyze"
	eventbus "tmt/pkg/eventbus"
	log "tmt/pkg/log"

	gomock "github.com/golang/mock/gomock"
)

// MockAnalyze is a mock of Analyze interface.
type MockAnalyze struct {
	ctrl     *gomock.Controller
	recorder *MockAnalyzeMockRecorder
}

// MockAnalyzeMockRecorder is the mock recorder for MockAnalyze.
type MockAnalyzeMockRecorder struct {
	mock *MockAnalyze
}

// NewMockAnalyze creates a new mock instance.
func NewMockAnalyze(ctrl *gomock.Controller) *MockAnalyze {
	mock := &MockAnalyze{ctrl: ctrl}
	mock.recorder = &MockAnalyzeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnalyze) EXPECT() *MockAnalyzeMockRecorder {
	return m.recorder
}

// GetRebornMap mocks base method.
func (m *MockAnalyze) GetRebornMap(ctx context.Context) map[time.Time][]entity.Stock {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRebornMap", ctx)
	ret0, _ := ret[0].(map[time.Time][]entity.Stock)
	return ret0
}

// GetRebornMap indicates an expected call of GetRebornMap.
func (mr *MockAnalyzeMockRecorder) GetRebornMap(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRebornMap", reflect.TypeOf((*MockAnalyze)(nil).GetRebornMap), ctx)
}

// Init mocks base method.
func (m *MockAnalyze) Init(logger *log.Log, cc *cache.Cache, bus *eventbus.Bus) analyze.Analyze {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", logger, cc, bus)
	ret0, _ := ret[0].(analyze.Analyze)
	return ret0
}

// Init indicates an expected call of Init.
func (mr *MockAnalyzeMockRecorder) Init(logger, cc, bus interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockAnalyze)(nil).Init), logger, cc, bus)
}
