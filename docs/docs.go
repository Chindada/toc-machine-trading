// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/analyze/reborn": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analyze V1"
                ],
                "summary": "getRebornTargets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.reborn"
                            }
                        }
                    }
                }
            }
        },
        "/v1/basic/config": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "getAllConfig",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/config.Config"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/basic/stock": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "getAllRepoStock",
                "parameters": [
                    {
                        "type": "string",
                        "description": "num",
                        "name": "num",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.stockDetailResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/basic/usage/shioaji": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "getShioajiUsage",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ShioajiUsage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/history/day-kbar/{stock}/{start_date}/{interval}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "History V1"
                ],
                "summary": "getKbarData",
                "parameters": [
                    {
                        "type": "string",
                        "description": "stock",
                        "name": "stock",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "start_date",
                        "name": "start_date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "interval",
                        "name": "interval",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.StockHistoryKbar"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "loginHandler",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponseBody"
                        }
                    }
                }
            }
        },
        "/v1/logout": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "logutHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LogoutResponseBody"
                        }
                    }
                }
            }
        },
        "/v1/order": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order V1"
                ],
                "summary": "manualInsertFutureOrder",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.manualInsertFutureOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/order/account/balance": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account V1"
                ],
                "summary": "getAccountBalance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.accountSummary"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/order/all": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order V1"
                ],
                "summary": "getAllOrder",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.allOrder"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/order/balance": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order V1"
                ],
                "summary": "getAllTradeBalance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.tradeBalance"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/order/balance/future/last": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order V1"
                ],
                "summary": "getLastFutureTradeBalance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.FutureTradeBalance"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/order/balance/stock/last": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order V1"
                ],
                "summary": "getLastStockTradeBalance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StockTradeBalance"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/order/date/{tradeday}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order V1"
                ],
                "summary": "getAllOrderByTradeDay",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tradeday",
                        "name": "tradeday",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.futureOrders"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order V1"
                ],
                "summary": "updateTradeBalanceByTradeDay",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tradeday",
                        "name": "tradeday",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.futureOrders"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/order/day-trade/forward": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order V1"
                ],
                "summary": "calculateForwardDayTradeBalance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "buy_price",
                        "name": "buy_price",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "buy_quantity",
                        "name": "buy_quantity",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sell_price",
                        "name": "sell_price",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sell_quantity",
                        "name": "sell_quantity",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.dayTradeResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/order/day-trade/reverse": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order V1"
                ],
                "summary": "calculateReverseDayTradeBalance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sell_first_price",
                        "name": "sell_first_price",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sell_first_quantity",
                        "name": "sell_first_quantity",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "buy_later_price",
                        "name": "buy_later_price",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "buy_later_quantity",
                        "name": "buy_later_quantity",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.dayTradeResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/order/future/{order-id}": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order V1"
                ],
                "summary": "moveFutureOrderToLatestTradeDay",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order-id",
                        "name": "order-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/order/stock/{order-id}": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order V1"
                ],
                "summary": "moveStockOrderToLatestTradeDay",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order-id",
                        "name": "order-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/refresh": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "refreshTokenHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.RefreshResponseBody"
                        }
                    }
                }
            }
        },
        "/v1/stream/index": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stream V1"
                ],
                "summary": "getIndex",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TradeIndex"
                        }
                    }
                }
            }
        },
        "/v1/stream/tse/snapshot": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stream V1"
                ],
                "summary": "getTSESnapshot",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StockSnapShot"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/v1/targets": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targets V1"
                ],
                "summary": "getTargets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.StockTarget"
                            }
                        }
                    }
                }
            }
        },
        "/v1/trade/stock/buy/lot": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade V1"
                ],
                "summary": "buyLotStock",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.lotStockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.tradeResponse"
                        }
                    }
                }
            }
        },
        "/v1/trade/stock/buy/odd": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade V1"
                ],
                "summary": "buyOddStock",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.oddStockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.tradeResponse"
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "newUserHandler",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/activate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "activateUserHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user",
                        "name": "user",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/verify/{user}/{code}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "verifyEmailHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginBody": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.LoginResponseBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "expire": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.LogoutResponseBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                }
            }
        },
        "auth.RefreshResponseBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "expire": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "config.AnalyzeStock": {
            "type": "object",
            "properties": {
                "allInOutRatio": {
                    "type": "number"
                },
                "allOutInRatio": {
                    "type": "number"
                },
                "closeChangeRatioHigh": {
                    "type": "number"
                },
                "closeChangeRatioLow": {
                    "type": "number"
                },
                "maperiod": {
                    "type": "integer"
                },
                "maxHoldTime": {
                    "type": "number"
                },
                "rsiminCount": {
                    "type": "integer"
                },
                "tickAnalyzePeriod": {
                    "type": "number"
                },
                "volumePRLimit": {
                    "type": "number"
                }
            }
        },
        "config.Config": {
            "type": "object",
            "properties": {
                "analyzeStock": {
                    "$ref": "#/definitions/config.AnalyzeStock"
                },
                "database": {
                    "$ref": "#/definitions/config.Database"
                },
                "fugle": {
                    "$ref": "#/definitions/config.Fugle"
                },
                "history": {
                    "$ref": "#/definitions/config.History"
                },
                "manualTrade": {
                    "type": "boolean"
                },
                "quota": {
                    "$ref": "#/definitions/config.Quota"
                },
                "rabbitMQ": {
                    "$ref": "#/definitions/config.RabbitMQ"
                },
                "server": {
                    "$ref": "#/definitions/config.Server"
                },
                "simulation": {
                    "type": "boolean"
                },
                "sinopac": {
                    "$ref": "#/definitions/config.Sinopac"
                },
                "smtp": {
                    "$ref": "#/definitions/config.SMTP"
                },
                "targetStock": {
                    "$ref": "#/definitions/config.TargetStock"
                },
                "tradeFuture": {
                    "$ref": "#/definitions/config.TradeFuture"
                },
                "tradeStock": {
                    "$ref": "#/definitions/config.TradeStock"
                }
            }
        },
        "config.Database": {
            "type": "object",
            "properties": {
                "dbname": {
                    "type": "string"
                },
                "poolMax": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "config.Fugle": {
            "type": "object",
            "properties": {
                "poolMax": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "config.History": {
            "type": "object",
            "properties": {
                "historyClosePeriod": {
                    "type": "integer"
                },
                "historyKbarPeriod": {
                    "type": "integer"
                },
                "historyTickPeriod": {
                    "type": "integer"
                }
            }
        },
        "config.PriceLimit": {
            "type": "object",
            "properties": {
                "high": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                }
            }
        },
        "config.Quota": {
            "type": "object",
            "properties": {
                "futureTradeFee": {
                    "type": "integer"
                },
                "stockFeeDiscount": {
                    "type": "number"
                },
                "stockTradeQuota": {
                    "type": "integer"
                }
            }
        },
        "config.RabbitMQ": {
            "type": "object",
            "properties": {
                "attempts": {
                    "type": "integer"
                },
                "exchange": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "waitTime": {
                    "type": "integer"
                }
            }
        },
        "config.SMTP": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "config.Server": {
            "type": "object",
            "properties": {
                "disableSwaggerHTTPHandler": {
                    "type": "string"
                },
                "http": {
                    "type": "string"
                }
            }
        },
        "config.Sinopac": {
            "type": "object",
            "properties": {
                "poolMax": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "config.TargetStock": {
            "type": "object",
            "properties": {
                "blackCategory": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blackStock": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limitVolume": {
                    "type": "integer"
                },
                "priceLimit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.PriceLimit"
                    }
                },
                "realTimeRank": {
                    "type": "integer"
                }
            }
        },
        "config.TradeFuture": {
            "type": "object",
            "properties": {
                "allowTrade": {
                    "type": "boolean"
                },
                "buySellWaitTime": {
                    "type": "integer"
                },
                "inOutRatio": {
                    "type": "number"
                },
                "maxHoldTime": {
                    "type": "integer"
                },
                "outInRatio": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "rateChangeRatio": {
                    "type": "number"
                },
                "rateLimit": {
                    "type": "number"
                },
                "subscribe": {
                    "type": "boolean"
                },
                "targetBalanceHigh": {
                    "type": "number"
                },
                "targetBalanceLow": {
                    "type": "number"
                },
                "tickInterval": {
                    "type": "integer"
                },
                "tradeOutWaitTimes": {
                    "type": "integer"
                },
                "tradeTimeRange": {
                    "$ref": "#/definitions/config.TradeTimeRange"
                }
            }
        },
        "config.TradeStock": {
            "type": "object",
            "properties": {
                "allowTrade": {
                    "type": "boolean"
                },
                "cancelWaitTime": {
                    "type": "integer"
                },
                "holdTimeFromOpen": {
                    "type": "number"
                },
                "odd": {
                    "type": "boolean"
                },
                "subscribe": {
                    "type": "boolean"
                },
                "totalOpenTime": {
                    "type": "number"
                },
                "tradeInEndTime": {
                    "type": "number"
                },
                "tradeInWaitTime": {
                    "type": "integer"
                },
                "tradeOutWaitTime": {
                    "type": "integer"
                }
            }
        },
        "config.TradeTimeRange": {
            "type": "object",
            "properties": {
                "firstPartDuration": {
                    "type": "integer"
                },
                "secondPartDuration": {
                    "type": "integer"
                }
            }
        },
        "entity.AccountBalance": {
            "type": "object",
            "properties": {
                "available_margin": {
                    "type": "number"
                },
                "balance": {
                    "type": "number"
                },
                "bank_id": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "risk_indicator": {
                    "type": "number"
                },
                "today_margin": {
                    "type": "number"
                },
                "yesterday_margin": {
                    "type": "number"
                }
            }
        },
        "entity.Future": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "delivery_month": {
                    "type": "string"
                },
                "limit_down": {
                    "type": "number"
                },
                "limit_up": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "reference": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "underlying_kind": {
                    "type": "string"
                },
                "unit": {
                    "type": "integer"
                },
                "update_date": {
                    "type": "string"
                }
            }
        },
        "entity.FutureOrder": {
            "type": "object",
            "properties": {
                "base_order": {
                    "$ref": "#/definitions/entity.OrderDetail"
                },
                "code": {
                    "type": "string"
                },
                "future": {
                    "$ref": "#/definitions/entity.Future"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "entity.FutureTradeBalance": {
            "type": "object",
            "properties": {
                "forward": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "reverse": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "trade_count": {
                    "type": "integer"
                },
                "trade_day": {
                    "type": "string"
                }
            }
        },
        "entity.IndexStatus": {
            "type": "object",
            "properties": {
                "break_count": {
                    "type": "integer"
                },
                "price_chg": {
                    "type": "number"
                }
            }
        },
        "entity.OrderAction": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "ActionNone",
                "ActionBuy",
                "ActionSell"
            ]
        },
        "entity.OrderDetail": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/entity.OrderAction"
                },
                "order_id": {
                    "type": "string"
                },
                "order_time": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/entity.OrderStatus"
                }
            }
        },
        "entity.OrderStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
            ],
            "x-enum-varnames": [
                "StatusUnknow",
                "StatusPendingSubmit",
                "StatusPreSubmitted",
                "StatusSubmitted",
                "StatusFailed",
                "StatusCancelled",
                "StatusFilled",
                "StatusPartFilled"
            ]
        },
        "entity.ShioajiUsage": {
            "type": "object",
            "properties": {
                "connections": {
                    "type": "integer"
                },
                "traffic_usage": {
                    "type": "number"
                },
                "traffic_usage_percents": {
                    "type": "number"
                }
            }
        },
        "entity.Stock": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "day_trade": {
                    "type": "boolean"
                },
                "delivery_date": {
                    "type": "string"
                },
                "delivery_month": {
                    "type": "string"
                },
                "exchange": {
                    "type": "string"
                },
                "last_close": {
                    "type": "number"
                },
                "limit_down": {
                    "type": "number"
                },
                "limit_up": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "reference": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "underlying_kind": {
                    "type": "string"
                },
                "unit": {
                    "type": "integer"
                },
                "update_date": {
                    "type": "string"
                }
            }
        },
        "entity.StockHistoryKbar": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "number"
                },
                "high": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "kbar_time": {
                    "type": "string"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "stock": {
                    "$ref": "#/definitions/entity.Stock"
                },
                "stock_num": {
                    "type": "string"
                },
                "volume": {
                    "type": "integer"
                }
            }
        },
        "entity.StockOrder": {
            "type": "object",
            "properties": {
                "base_order": {
                    "$ref": "#/definitions/entity.OrderDetail"
                },
                "lot": {
                    "type": "integer"
                },
                "share": {
                    "type": "integer"
                },
                "stock": {
                    "$ref": "#/definitions/entity.Stock"
                },
                "stock_num": {
                    "type": "string"
                }
            }
        },
        "entity.StockSnapShot": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "amount_sum": {
                    "type": "integer"
                },
                "chg_type": {
                    "type": "string"
                },
                "close": {
                    "type": "number"
                },
                "high": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "pct_chg": {
                    "type": "number"
                },
                "price_chg": {
                    "type": "number"
                },
                "snap_time": {
                    "type": "string"
                },
                "stock_name": {
                    "type": "string"
                },
                "stock_num": {
                    "type": "string"
                },
                "tick_type": {
                    "type": "string"
                },
                "volume": {
                    "type": "integer"
                },
                "volume_ratio": {
                    "type": "number"
                },
                "volume_sum": {
                    "type": "integer"
                },
                "yesterday_volume": {
                    "type": "number"
                }
            }
        },
        "entity.StockTarget": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "rank": {
                    "type": "integer"
                },
                "stock": {
                    "$ref": "#/definitions/entity.Stock"
                },
                "stock_num": {
                    "type": "string"
                },
                "trade_day": {
                    "type": "string"
                },
                "volume": {
                    "type": "integer"
                }
            }
        },
        "entity.StockTradeBalance": {
            "type": "object",
            "properties": {
                "discount": {
                    "type": "integer"
                },
                "forward": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "original_balance": {
                    "type": "integer"
                },
                "reverse": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "trade_count": {
                    "type": "integer"
                },
                "trade_day": {
                    "type": "string"
                }
            }
        },
        "entity.TradeIndex": {
            "type": "object",
            "properties": {
                "nasdaq": {
                    "$ref": "#/definitions/entity.IndexStatus"
                },
                "nf": {
                    "$ref": "#/definitions/entity.IndexStatus"
                },
                "otc": {
                    "$ref": "#/definitions/entity.IndexStatus"
                },
                "tse": {
                    "$ref": "#/definitions/entity.IndexStatus"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "resp.Response": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                }
            }
        },
        "v1.accountSummary": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.AccountBalance"
                    }
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "v1.allOrder": {
            "type": "object",
            "properties": {
                "future": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.FutureOrder"
                    }
                },
                "stock": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.StockOrder"
                    }
                }
            }
        },
        "v1.dayTradeResult": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                }
            }
        },
        "v1.futureOrders": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.FutureOrder"
                    }
                }
            }
        },
        "v1.lotStockRequest": {
            "type": "object",
            "properties": {
                "lot": {
                    "type": "integer"
                },
                "num": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "v1.manualInsertFutureOrderRequest": {
            "type": "object",
            "required": [
                "action",
                "code",
                "order_time",
                "price",
                "quantity"
            ],
            "properties": {
                "action": {
                    "$ref": "#/definitions/entity.OrderAction"
                },
                "code": {
                    "type": "string"
                },
                "order_time": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "v1.oddStockRequest": {
            "type": "object",
            "properties": {
                "num": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "share": {
                    "type": "integer"
                }
            }
        },
        "v1.reborn": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "stocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Stock"
                    }
                }
            }
        },
        "v1.stockDetailResponse": {
            "type": "object",
            "properties": {
                "stock_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Stock"
                    }
                }
            }
        },
        "v1.tradeBalance": {
            "type": "object",
            "properties": {
                "future": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.FutureTradeBalance"
                    }
                },
                "stock": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.StockTradeBalance"
                    }
                }
            }
        },
        "v1.tradeResponse": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.5.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "TOC MACHINE TRADING",
	Description:      "API docs for Auto Trade",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
