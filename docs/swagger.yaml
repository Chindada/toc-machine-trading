definitions:
  config.Analyze:
    properties:
      all_in_out_ratio:
        type: number
      all_out_in_ratio:
        type: number
      close_change_ratio_high:
        type: number
      close_change_ratio_low:
        type: number
      ma_period:
        type: integer
      max_hold_time:
        type: number
      rsi_min_count:
        type: integer
      tick_analyze_period:
        type: number
      volume_pr_limit:
        type: number
    type: object
  config.Config:
    properties:
      analyze:
        $ref: '#/definitions/config.Analyze'
      future_trade_switch:
        $ref: '#/definitions/config.FutureTradeSwitch'
      history:
        $ref: '#/definitions/config.History'
      http:
        $ref: '#/definitions/config.HTTP'
      postgres:
        $ref: '#/definitions/config.Postgres'
      quota:
        $ref: '#/definitions/config.Quota'
      rabbitmq:
        $ref: '#/definitions/config.RabbitMQ'
      simulation:
        type: boolean
      sinopac:
        $ref: '#/definitions/config.Sinopac'
      target_cond:
        $ref: '#/definitions/config.TargetCond'
      trade_switch:
        $ref: '#/definitions/config.TradeSwitch'
    type: object
  config.FutureTradeSwitch:
    properties:
      cancel_wait_time:
        type: integer
      quantity:
        type: integer
      trade_in_wait_time:
        type: integer
      trade_out_wait_time:
        type: integer
      trade_time_range:
        items:
          $ref: '#/definitions/config.TradeTimeRange'
        type: array
    type: object
  config.HTTP:
    properties:
      port:
        type: string
    type: object
  config.History:
    properties:
      history_close_period:
        type: integer
      history_kbar_period:
        type: integer
      history_tick_period:
        type: integer
    type: object
  config.Postgres:
    properties:
      db_name:
        type: string
      pool_max:
        type: integer
      url:
        type: string
    type: object
  config.PriceLimit:
    properties:
      high:
        type: number
      low:
        type: number
    type: object
  config.Quota:
    properties:
      fee_discount:
        type: number
      trade_fee_ratio:
        type: number
      trade_quota:
        type: integer
      trade_tax_ratio:
        type: number
    type: object
  config.RabbitMQ:
    properties:
      attempts:
        type: integer
      exchange:
        type: string
      url:
        type: string
      wait_time:
        type: integer
    type: object
  config.Sinopac:
    properties:
      pool_max:
        type: integer
      url:
        type: string
    type: object
  config.TargetCond:
    properties:
      black_category:
        items:
          type: string
        type: array
      black_stock:
        items:
          type: string
        type: array
      limit_volume:
        type: integer
      monitor_future_code:
        type: string
      price_limit:
        items:
          $ref: '#/definitions/config.PriceLimit'
        type: array
      real_time_rank:
        type: integer
    type: object
  config.TradeSwitch:
    properties:
      cancel_wait_time:
        type: integer
      hold_time_from_open:
        type: number
      total_open_time:
        type: number
      trade_in_end_time:
        type: number
      trade_in_wait_time:
        type: integer
      trade_out_wait_time:
        type: integer
    type: object
  config.TradeTimeRange:
    properties:
      duration:
        type: integer
      start_time:
        type: string
    type: object
  entity.HistoryKbar:
    properties:
      close:
        type: number
      high:
        type: number
      id:
        type: integer
      kbar_time:
        type: string
      low:
        type: number
      open:
        type: number
      stock:
        $ref: '#/definitions/entity.Stock'
      stock_num:
        type: string
      volume:
        type: integer
    type: object
  entity.Order:
    properties:
      action:
        type: integer
      group_id:
        type: string
      order_id:
        type: string
      order_time:
        type: string
      price:
        type: number
      quantity:
        type: integer
      status:
        type: integer
      stock:
        $ref: '#/definitions/entity.Stock'
      stock_num:
        type: string
      tick_time:
        type: string
      trade_time:
        type: string
    type: object
  entity.Stock:
    properties:
      category:
        type: string
      day_trade:
        type: boolean
      exchange:
        type: string
      last_close:
        type: number
      name:
        type: string
      number:
        type: string
      update_date:
        type: string
    type: object
  entity.StockSnapShot:
    properties:
      amount:
        type: integer
      amount_sum:
        type: integer
      chg_type:
        type: string
      close:
        type: number
      high:
        type: number
      low:
        type: number
      open:
        type: number
      pct_chg:
        type: number
      price_chg:
        type: number
      snap_time:
        type: string
      stock_name:
        type: string
      stock_num:
        type: string
      tick_type:
        type: string
      volume:
        type: integer
      volume_ratio:
        type: number
      volume_sum:
        type: integer
      yesterday_volume:
        type: number
    type: object
  entity.Target:
    properties:
      id:
        type: integer
      rank:
        type: integer
      stock:
        $ref: '#/definitions/entity.Stock'
      stock_num:
        type: string
      trade_day:
        type: string
      volume:
        type: integer
    type: object
  entity.TradeBalance:
    properties:
      discount:
        type: integer
      forward:
        type: integer
      id:
        type: integer
      original_balance:
        type: integer
      reverse:
        type: integer
      total:
        type: integer
      trade_count:
        type: integer
      trade_day:
        type: string
    type: object
  v1.dayTradeResult:
    properties:
      balance:
        type: integer
    type: object
  v1.reborn:
    properties:
      date:
        type: string
      stocks:
        items:
          $ref: '#/definitions/entity.Stock'
        type: array
    type: object
  v1.response:
    properties:
      error:
        type: string
    type: object
  v1.stockDetailResponse:
    properties:
      stock_detail:
        items:
          $ref: '#/definitions/entity.Stock'
        type: array
    type: object
info:
  contact: {}
  description: API docs for Auto Trade
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: TOC MACHINE TRADING
  version: 0.0.1
paths:
  /analyze/reborn:
    get:
      consumes:
      - application/json
      description: getRebornTargets
      operationId: getRebornTargets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.reborn'
            type: array
      summary: getRebornTargets
      tags:
      - analyze
  /analyze/simulate-historytick:
    get:
      consumes:
      - application/json
      description: startSimulateHistoryTick
      operationId: startSimulateHistoryTick
      parameters:
      - description: use_default
        in: header
        name: use_default
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: startSimulateHistoryTick
      tags:
      - analyze
  /basic/config:
    get:
      consumes:
      - application/json
      description: getAllConfig
      operationId: getAllConfig
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.Config'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getAllConfig
      tags:
      - system
  /basic/stock:
    get:
      consumes:
      - application/json
      description: getAllRepoStock
      operationId: getAllRepoStock
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.stockDetailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getAllRepoStock
      tags:
      - basic
  /basic/stock/sinopac-to-repo:
    get:
      consumes:
      - application/json
      description: getAllSinopacStockAndUpdateRepo
      operationId: getAllSinopacStockAndUpdateRepo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.stockDetailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getAllSinopacStockAndUpdateRepo
      tags:
      - basic
  /basic/system/terminate:
    put:
      consumes:
      - application/json
      description: terminateSinopac
      operationId: terminateSinopac
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: terminateSinopac
      tags:
      - system
  /history/day-kbar/{stock}/{start_date}/{interval}:
    get:
      consumes:
      - application/json
      description: getKbarData
      operationId: getKbarData
      parameters:
      - description: stock
        in: path
        name: stock
        required: true
        type: string
      - description: start_date
        in: path
        name: start_date
        required: true
        type: string
      - description: interval
        in: path
        name: interval
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.HistoryKbar'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getKbarData
      tags:
      - history
  /order/all:
    get:
      consumes:
      - application/json
      description: getAllOrder
      operationId: getAllOrder
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Order'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getAllOrder
      tags:
      - order
  /order/balance:
    get:
      consumes:
      - application/json
      description: getAllTradeBalance
      operationId: getAllTradeBalance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.TradeBalance'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getAllTradeBalance
      tags:
      - order
  /order/day-trade/forward:
    get:
      consumes:
      - application/json
      description: calculateForwardDayTradeBalance
      operationId: calculateForwardDayTradeBalance
      parameters:
      - description: buy_price
        in: header
        name: buy_price
        required: true
        type: string
      - description: buy_quantity
        in: header
        name: buy_quantity
        required: true
        type: string
      - description: sell_price
        in: header
        name: sell_price
        required: true
        type: string
      - description: sell_quantity
        in: header
        name: sell_quantity
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dayTradeResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: calculateForwardDayTradeBalance
      tags:
      - order
  /order/day-trade/reverse:
    get:
      consumes:
      - application/json
      description: calculateReverseDayTradeBalance
      operationId: calculateReverseDayTradeBalance
      parameters:
      - description: sell_first_price
        in: header
        name: sell_first_price
        required: true
        type: string
      - description: sell_first_quantity
        in: header
        name: sell_first_quantity
        required: true
        type: string
      - description: buy_later_price
        in: header
        name: buy_later_price
        required: true
        type: string
      - description: buy_later_quantity
        in: header
        name: buy_later_quantity
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dayTradeResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: calculateReverseDayTradeBalance
      tags:
      - order
  /order/status/update:
    put:
      consumes:
      - application/json
      description: askOrderUpdate
      operationId: askOrderUpdate
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: askOrderUpdate
      tags:
      - order
  /stream/tse/snapshot:
    get:
      consumes:
      - application/json
      description: getTSESnapshot
      operationId: getTSESnapshot
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StockSnapShot'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getTSESnapshot
      tags:
      - stream
  /targets:
    get:
      consumes:
      - application/json
      description: getTargets
      operationId: getTargets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Target'
            type: array
      summary: getTargets
      tags:
      - targets
swagger: "2.0"
