definitions:
  config.AnalyzeStock:
    properties:
      all_in_out_ratio:
        type: number
      all_out_in_ratio:
        type: number
      close_change_ratio_high:
        type: number
      close_change_ratio_low:
        type: number
      ma_period:
        type: integer
      max_hold_time:
        type: number
      rsi_min_count:
        type: integer
      tick_analyze_period:
        type: number
      volume_pr_limit:
        type: number
    type: object
  config.Config:
    properties:
      analyzeStock:
        $ref: '#/definitions/config.AnalyzeStock'
      database:
        allOf:
        - $ref: '#/definitions/config.Database'
        description: from env no need tag
      fugle:
        $ref: '#/definitions/config.Fugle'
      history:
        $ref: '#/definitions/config.History'
      quota:
        $ref: '#/definitions/config.Quota'
      rabbitMQ:
        $ref: '#/definitions/config.RabbitMQ'
      server:
        $ref: '#/definitions/config.Server'
      simulation:
        type: boolean
      sinopac:
        $ref: '#/definitions/config.Sinopac'
      targetStock:
        $ref: '#/definitions/config.TargetStock'
      tradeFuture:
        $ref: '#/definitions/config.TradeFuture'
      tradeStock:
        $ref: '#/definitions/config.TradeStock'
    type: object
  config.Database:
    properties:
      dbname:
        type: string
      poolMax:
        type: integer
      url:
        type: string
    type: object
  config.Fugle:
    properties:
      poolMax:
        type: integer
      url:
        type: string
    type: object
  config.History:
    properties:
      history_close_period:
        type: integer
      history_kbar_period:
        type: integer
      history_tick_period:
        type: integer
    type: object
  config.PriceLimit:
    properties:
      high:
        type: number
      low:
        type: number
    type: object
  config.Quota:
    properties:
      future_trade_fee:
        type: integer
      stock_fee_discount:
        type: number
      stock_trade_quota:
        type: integer
    type: object
  config.RabbitMQ:
    properties:
      attempts:
        type: integer
      exchange:
        type: string
      url:
        type: string
      waitTime:
        type: integer
    type: object
  config.Server:
    properties:
      disableSwaggerHTTPHandler:
        type: string
      http:
        type: string
      routerDebugMode:
        type: string
    type: object
  config.Sinopac:
    properties:
      poolMax:
        type: integer
      url:
        type: string
    type: object
  config.TargetStock:
    properties:
      black_category:
        items:
          type: string
        type: array
      black_stock:
        items:
          type: string
        type: array
      limit_volume:
        type: integer
      price_limit:
        items:
          $ref: '#/definitions/config.PriceLimit'
        type: array
      real_time_rank:
        type: integer
    type: object
  config.TradeFuture:
    properties:
      allow_trade:
        type: boolean
      buy_sell_wait_time:
        type: integer
      in_out_ratio:
        type: number
      max_hold_time:
        type: integer
      out_in_ratio:
        type: number
      quantity:
        type: integer
      rate_change_ratio:
        type: number
      rate_limit:
        type: number
      subscribe:
        type: boolean
      target_balance_high:
        type: number
      target_balance_low:
        type: number
      tick_interval:
        type: integer
      trade_out_wait_times:
        type: integer
      trade_time_range:
        $ref: '#/definitions/config.TradeTimeRange'
    type: object
  config.TradeStock:
    properties:
      allow_trade:
        type: boolean
      cancel_wait_time:
        type: integer
      hold_time_from_open:
        type: number
      subscribe:
        type: boolean
      total_open_time:
        type: number
      trade_in_end_time:
        type: number
      trade_in_wait_time:
        type: integer
      trade_out_wait_time:
        type: integer
    type: object
  config.TradeTimeRange:
    properties:
      first_part_duration:
        type: integer
      second_part_duration:
        type: integer
    type: object
  entity.BaseOrder:
    properties:
      action:
        $ref: '#/definitions/entity.OrderAction'
      order_id:
        type: string
      order_time:
        type: string
      price:
        type: number
      quantity:
        type: integer
      status:
        $ref: '#/definitions/entity.OrderStatus'
    type: object
  entity.Future:
    properties:
      category:
        type: string
      code:
        type: string
      delivery_date:
        type: string
      delivery_month:
        type: string
      limit_down:
        type: number
      limit_up:
        type: number
      name:
        type: string
      reference:
        type: number
      symbol:
        type: string
      underlying_kind:
        type: string
      unit:
        type: integer
      update_date:
        type: string
    type: object
  entity.FutureOrder:
    properties:
      base_order:
        $ref: '#/definitions/entity.BaseOrder'
      code:
        type: string
      future:
        $ref: '#/definitions/entity.Future'
    type: object
  entity.FutureTradeBalance:
    properties:
      forward:
        type: integer
      id:
        type: integer
      reverse:
        type: integer
      total:
        type: integer
      trade_count:
        type: integer
      trade_day:
        type: string
    type: object
  entity.IndexStatus:
    properties:
      break_count:
        type: integer
      price_chg:
        type: number
    type: object
  entity.OrderAction:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - ActionNone
    - ActionBuy
    - ActionSell
  entity.OrderStatus:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    type: integer
    x-enum-varnames:
    - StatusUnknow
    - StatusPendingSubmit
    - StatusPreSubmitted
    - StatusSubmitted
    - StatusFailed
    - StatusCancelled
    - StatusFilled
    - StatusPartFilled
  entity.Stock:
    properties:
      category:
        type: string
      code:
        type: string
      day_trade:
        type: boolean
      delivery_date:
        type: string
      delivery_month:
        type: string
      exchange:
        type: string
      last_close:
        type: number
      limit_down:
        type: number
      limit_up:
        type: number
      name:
        type: string
      number:
        type: string
      reference:
        type: number
      symbol:
        type: string
      underlying_kind:
        type: string
      unit:
        type: integer
      update_date:
        type: string
    type: object
  entity.StockHistoryKbar:
    properties:
      close:
        type: number
      high:
        type: number
      id:
        type: integer
      kbar_time:
        type: string
      low:
        type: number
      open:
        type: number
      stock:
        $ref: '#/definitions/entity.Stock'
      stock_num:
        type: string
      volume:
        type: integer
    type: object
  entity.StockOrder:
    properties:
      base_order:
        $ref: '#/definitions/entity.BaseOrder'
      stock:
        $ref: '#/definitions/entity.Stock'
      stock_num:
        type: string
    type: object
  entity.StockSnapShot:
    properties:
      amount:
        type: integer
      amount_sum:
        type: integer
      chg_type:
        type: string
      close:
        type: number
      high:
        type: number
      low:
        type: number
      open:
        type: number
      pct_chg:
        type: number
      price_chg:
        type: number
      snap_time:
        type: string
      stock_name:
        type: string
      stock_num:
        type: string
      tick_type:
        type: string
      volume:
        type: integer
      volume_ratio:
        type: number
      volume_sum:
        type: integer
      yesterday_volume:
        type: number
    type: object
  entity.StockTarget:
    properties:
      id:
        type: integer
      rank:
        type: integer
      stock:
        $ref: '#/definitions/entity.Stock'
      stock_num:
        type: string
      trade_day:
        type: string
      volume:
        type: integer
    type: object
  entity.StockTradeBalance:
    properties:
      discount:
        type: integer
      forward:
        type: integer
      id:
        type: integer
      original_balance:
        type: integer
      reverse:
        type: integer
      total:
        type: integer
      trade_count:
        type: integer
      trade_day:
        type: string
    type: object
  entity.TradeIndex:
    properties:
      nasdaq:
        $ref: '#/definitions/entity.IndexStatus'
      nf:
        $ref: '#/definitions/entity.IndexStatus'
      otc:
        $ref: '#/definitions/entity.IndexStatus'
      tse:
        $ref: '#/definitions/entity.IndexStatus'
    type: object
  v1.allOrder:
    properties:
      future:
        items:
          $ref: '#/definitions/entity.FutureOrder'
        type: array
      stock:
        items:
          $ref: '#/definitions/entity.StockOrder'
        type: array
    type: object
  v1.dayTradeResult:
    properties:
      balance:
        type: integer
    type: object
  v1.futureOrders:
    properties:
      orders:
        items:
          $ref: '#/definitions/entity.FutureOrder'
        type: array
    type: object
  v1.manualInsertFutureOrderRequest:
    properties:
      action:
        $ref: '#/definitions/entity.OrderAction'
      code:
        type: string
      order_time:
        type: string
      price:
        type: number
      quantity:
        type: integer
    required:
    - action
    - code
    - order_time
    - price
    - quantity
    type: object
  v1.reborn:
    properties:
      date:
        type: string
      stocks:
        items:
          $ref: '#/definitions/entity.Stock'
        type: array
    type: object
  v1.response:
    properties:
      error:
        type: string
    type: object
  v1.stockDetailResponse:
    properties:
      stock_detail:
        items:
          $ref: '#/definitions/entity.Stock'
        type: array
    type: object
  v1.tradeBalance:
    properties:
      future:
        items:
          $ref: '#/definitions/entity.FutureTradeBalance'
        type: array
      stock:
        items:
          $ref: '#/definitions/entity.StockTradeBalance'
        type: array
    type: object
info:
  contact: {}
  description: API docs for Auto Trade
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: TOC MACHINE TRADING
  version: 0.0.1
paths:
  /-/health:
    get:
      consumes:
      - application/json
      description: healthCheck
      operationId: healthCheck
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: healthCheck
      tags:
      - healthCheck
  /analyze/reborn:
    get:
      consumes:
      - application/json
      description: getRebornTargets
      operationId: getRebornTargets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.reborn'
            type: array
      summary: getRebornTargets
      tags:
      - analyze
  /basic/config:
    get:
      consumes:
      - application/json
      description: getAllConfig
      operationId: getAllConfig
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.Config'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getAllConfig
      tags:
      - system
  /basic/stock:
    get:
      consumes:
      - application/json
      description: getAllRepoStock
      operationId: getAllRepoStock
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.stockDetailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getAllRepoStock
      tags:
      - basic
  /basic/system/terminate/fugle:
    put:
      consumes:
      - application/json
      description: terminateFugle
      operationId: terminateFugle
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: terminateFugle
      tags:
      - system
  /basic/system/terminate/sinopac:
    put:
      consumes:
      - application/json
      description: terminateSinopac
      operationId: terminateSinopac
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: terminateSinopac
      tags:
      - system
  /history/day-kbar/{stock}/{start_date}/{interval}:
    get:
      consumes:
      - application/json
      description: getKbarData
      operationId: getKbarData
      parameters:
      - description: stock
        in: path
        name: stock
        required: true
        type: string
      - description: start_date
        in: path
        name: start_date
        required: true
        type: string
      - description: interval
        in: path
        name: interval
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.StockHistoryKbar'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getKbarData
      tags:
      - history
  /order:
    post:
      consumes:
      - application/json
      description: manualInsertFutureOrder
      operationId: manualInsertFutureOrder
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.manualInsertFutureOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: manualInsertFutureOrder
      tags:
      - order
  /order/all:
    get:
      consumes:
      - application/json
      description: getAllOrder
      operationId: getAllOrder
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.allOrder'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getAllOrder
      tags:
      - order
  /order/balance:
    get:
      consumes:
      - application/json
      description: getAllTradeBalance
      operationId: getAllTradeBalance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tradeBalance'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getAllTradeBalance
      tags:
      - order
  /order/balance/future/last:
    get:
      consumes:
      - application/json
      description: getLastFutureTradeBalance
      operationId: getLastFutureTradeBalance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.FutureTradeBalance'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getLastFutureTradeBalance
      tags:
      - order
  /order/balance/stock/last:
    get:
      consumes:
      - application/json
      description: getLastStockTradeBalance
      operationId: getLastStockTradeBalance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StockTradeBalance'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getLastStockTradeBalance
      tags:
      - order
  /order/date/{tradeday}:
    get:
      consumes:
      - application/json
      description: getAllOrderByTradeDay
      operationId: getAllOrderByTradeDay
      parameters:
      - description: tradeday
        in: path
        name: tradeday
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.futureOrders'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getAllOrderByTradeDay
      tags:
      - order
    put:
      consumes:
      - application/json
      description: updateTradeBalanceByTradeDay
      operationId: updateTradeBalanceByTradeDay
      parameters:
      - description: tradeday
        in: path
        name: tradeday
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.futureOrders'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: updateTradeBalanceByTradeDay
      tags:
      - order
  /order/day-trade/forward:
    get:
      consumes:
      - application/json
      description: calculateForwardDayTradeBalance
      operationId: calculateForwardDayTradeBalance
      parameters:
      - description: buy_price
        in: header
        name: buy_price
        required: true
        type: string
      - description: buy_quantity
        in: header
        name: buy_quantity
        required: true
        type: string
      - description: sell_price
        in: header
        name: sell_price
        required: true
        type: string
      - description: sell_quantity
        in: header
        name: sell_quantity
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dayTradeResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: calculateForwardDayTradeBalance
      tags:
      - order
  /order/day-trade/reverse:
    get:
      consumes:
      - application/json
      description: calculateReverseDayTradeBalance
      operationId: calculateReverseDayTradeBalance
      parameters:
      - description: sell_first_price
        in: header
        name: sell_first_price
        required: true
        type: string
      - description: sell_first_quantity
        in: header
        name: sell_first_quantity
        required: true
        type: string
      - description: buy_later_price
        in: header
        name: buy_later_price
        required: true
        type: string
      - description: buy_later_quantity
        in: header
        name: buy_later_quantity
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dayTradeResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: calculateReverseDayTradeBalance
      tags:
      - order
  /order/future/{order-id}:
    patch:
      consumes:
      - application/json
      description: moveFutureOrderToLatestTradeDay
      operationId: moveFutureOrderToLatestTradeDay
      parameters:
      - description: order-id
        in: path
        name: order-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: moveFutureOrderToLatestTradeDay
      tags:
      - order
  /order/stock/{order-id}:
    patch:
      consumes:
      - application/json
      description: moveStockOrderToLatestTradeDay
      operationId: moveStockOrderToLatestTradeDay
      parameters:
      - description: order-id
        in: path
        name: order-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: moveStockOrderToLatestTradeDay
      tags:
      - order
  /stream/index:
    get:
      consumes:
      - application/json
      description: getIndex
      operationId: getIndex
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.TradeIndex'
      summary: getIndex
      tags:
      - stream
  /stream/tse/snapshot:
    get:
      consumes:
      - application/json
      description: getTSESnapshot
      operationId: getTSESnapshot
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StockSnapShot'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: getTSESnapshot
      tags:
      - stream
  /targets:
    get:
      consumes:
      - application/json
      description: getTargets
      operationId: getTargets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.StockTarget'
            type: array
      summary: getTargets
      tags:
      - targets
swagger: "2.0"
